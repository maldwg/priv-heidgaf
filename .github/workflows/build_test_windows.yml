name: build_test_windows
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build_test_windows:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "windows-latest" ]
        python-version: [ "3.11",
                          "3.10",
        ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup py-${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git unzip mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-zlib mingw-w64-x86_64-libtiff mingw-w64-x86_64-freetype mingw-w64-x86_64-lcms2 mingw-w64-x86_64-libwebp mingw-w64-x86_64-openjpeg2 mingw-w64-x86_64-libimagequant mingw-w64-x86_64-libraqm mingw-w64-x86_64-gcc mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-python3-setuptools

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements.dev.txt -r requirements/requirements.detector.txt -r requirements/requirements.logcollector.txt -r requirements/requirements.prefilter.txt -r requirements/requirements.inspector.txt -r requirements/requirements.logserver.txt

      - name: Test
        if: startsWith(matrix.os, 'windows') && !startsWith(github.ref, 'refs/tags/')
        run: |
          python -m unittest discover tests
