Entscheidung zur Architektur für Logline-Verarbeitung
=====================================================

Ziel
----
Verteilung der Last durch mehrere Instanzen der verwendenden Klasse in verschiedenen Docker-Containern.

Überlegungen
------------
- Zwei mögliche Ansätze:

  1. Zentraler Server empfängt Loglines, Clients holen Loglines ab.
  2. Verwendende Klasse bietet Server an, Loglines werden gesendet.

Vorteile des zentralen Servers
------------------------------
- Zentrale Verwaltung und Skalierbarkeit:

  * Loglines von verschiedenen Quellen zentral empfangen und speichern.
  * Unabhängige Skalierung des Servers zur Bewältigung hoher Lasten.
  * Unabhängige Skalierung der Clients.

- Einfache Lastverteilung:

  * Mehrere Clients in verschiedenen Docker-Containern verbinden sich mit zentralem Server.
  * Erleichterte Lastverteilung durch zentrale Verwaltung der eingehenden Loglines.

- Flexibilität:

  * Unabhängige Skalierung und Wartung von Server und Clients.
  * Vereinfachte Verwaltung der gesamten Infrastruktur.

- Zentralisierte Logs:

  * Alle Loglines an einem zentralen Ort gesammelt.
  * Erleichterte Überwachung, Analyse und Fehlerbehebung.

Entscheidung
------------
Verwendung des zentralen Servers zur Logline-Verarbeitung.

Implementierung
---------------
- Zentraler Server:

  * Empfang und Speicherung von Loglines.
  * Skalierbare und zentrale Verwaltung.

- Clients:

  * Abruf und Verarbeitung der Loglines vom zentralen Server.
  * Ausführung in mehreren Docker-Containern zur Lastverteilung.
